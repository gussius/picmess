<Project>
  <Name>ShaderExample</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Current Architecture</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>VNPair</Name>
        <Access>Public</Access>
        <Location left="1462" top="192" />
        <Size width="311" height="274" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int position</Member>
        <Member type="Field">private int normal</Member>
        <Member type="Constructor">public VNPair(int position, int normal)</Member>
        <Member type="Constructor">public VNPair()</Member>
        <Member type="Property">public int P { get; set; }</Member>
        <Member type="Property">public int N { get; set; }</Member>
        <Member type="Method">public static bool operator ==(VNPair pair1, VNPair pair2)</Member>
        <Member type="Method">public static bool operator !=(VNPair pair1, VNPair pair2)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Method">public override bool Equals(object obj)</Member>
        <Member type="Method">public override int GetHashCode()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Cube</Name>
        <Access>Public</Access>
        <Location left="571" top="330" />
        <Size width="348" height="468" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static Shader cubeShader</Member>
        <Member type="Field">private static string name</Member>
        <Member type="Field">private static FrameBufferManager fbManager</Member>
        <Member type="Field">private Color4 color</Member>
        <Member type="Field">private Vector3 position</Member>
        <Member type="Field">private Vector3 rotation</Member>
        <Member type="Field">private Mesh cubeMesh</Member>
        <Member type="Field">private string sourceFile</Member>
        <Member type="Field">private int surfaceColorLocation</Member>
        <Member type="Field">private Matrix4 modelviewMatrix</Member>
        <Member type="Field">private int modelviewMatrixLocation</Member>
        <Member type="Field">private int id</Member>
        <Member type="Field">private bool isSelected</Member>
        <Member type="Constructor">static Cube()</Member>
        <Member type="Constructor">public Cube(Vector3 position, Vector3 rotation, Color4 color)</Member>
        <Member type="Property">public Vector3 Position { get; set; }</Member>
        <Member type="Property">public Vector3 Rotation { get; set; }</Member>
        <Member type="Property">public Color4 Color { get; set; }</Member>
        <Member type="Property">public int ShaderID { get; set; }</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public bool IsSelected { get; }</Member>
        <Member type="Method">private void registerCube()</Member>
        <Member type="Method">public void Draw()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EntryPoint</Name>
        <Access>Public</Access>
        <Location left="1462" top="52" />
        <Size width="266" height="110" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void Main()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Game</Name>
        <Access>Public</Access>
        <Location left="35" top="398" />
        <Size width="401" height="434" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public int projectionMatrixLocation</Member>
        <Member type="Field">Matrix4 projectionMatrix</Member>
        <Member type="Field">Vector3 lightPosition</Member>
        <Member type="Field">int lightPositionLocation</Member>
        <Member type="Field">Cube cube</Member>
        <Member type="Field">Cube[] cubeArray</Member>
        <Member type="Field">Random randomNumber</Member>
        <Member type="Field">Vector3 randomVector</Member>
        <Member type="Field">Vector3 randomRotation</Member>
        <Member type="Field">FrameBufferManager fbManager</Member>
        <Member type="Field">int clearColor</Member>
        <Member type="Constructor">public Game()</Member>
        <Member type="Method">protected override void OnUpdateFrame(FrameEventArgs e)</Member>
        <Member type="Method">protected override void OnRenderFrame(FrameEventArgs e)</Member>
        <Member type="Method">protected override void OnResize(EventArgs e)</Member>
        <Member type="Method">private void QueryMatrixLocation()</Member>
        <Member type="Method">private void SetProjectionMatrix(Matrix matrix)</Member>
        <Member type="Method">private void SetLightPosition(Vector3 light)</Member>
        <Member type="Method">public void MouseButtonDown(object sender, MouseButtonEventArgs e)</Member>
        <Member type="Method">private void DrawScene(RenderState state)</Member>
        <Member type="Method">private ISelectable PickColor(int x, int y)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>Vertex</Name>
        <Access>Public</Access>
        <Location left="1462" top="499" />
        <Size width="489" height="310" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Vector3 position</Member>
        <Member type="Field">private Vector3 normal</Member>
        <Member type="Field">private readonly int sizeInBytes</Member>
        <Member type="Constructor">public Vertex(Vector3 position, Vector3 normal)</Member>
        <Member type="Constructor">public Vertex(SerializationInfo info, StreamingContext context)</Member>
        <Member type="Property">public Vector3 Position { get; set; }</Member>
        <Member type="Property">public Vector3 Normal { get; set; }</Member>
        <Member type="Property">public static int SizeInBytes { get; }</Member>
        <Member type="Method">void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</Member>
      </Entity>
      <Entity type="Class">
        <Name>Mesh</Name>
        <Access>Public</Access>
        <Location left="1036" top="219" />
        <Size width="332" height="292" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static Dictionary&lt;string, Mesh&gt; meshRegister</Member>
        <Member type="Field">private static bool drawn</Member>
        <Member type="Field">private int[] indexArray</Member>
        <Member type="Field">private Vertex[] vertexArray</Member>
        <Member type="Field">private int VboID</Member>
        <Member type="Field">private int indicesVboHandle</Member>
        <Member type="Constructor">private Mesh(string fileName, string MeshName)</Member>
        <Member type="Method">public static Mesh CreateMesh(string fileName, string meshName)</Member>
        <Member type="Method">private void LoadVertices()</Member>
        <Member type="Method">private void LoadIndexer()</Member>
        <Member type="Method">public void Draw()</Member>
        <Member type="Method">public void LoadObjFile(string objFileName)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>Byte4</Name>
        <Access>Public</Access>
        <Location left="1462" top="846" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public byte R</Member>
        <Member type="Field">public byte G</Member>
        <Member type="Field">public byte B</Member>
        <Member type="Field">public byte A</Member>
        <Member type="Constructor">public Byte4(byte[] input)</Member>
        <Member type="Method">public uint ToUInt32()</Member>
        <Member type="Method">public override string ToString()</Member>
      </Entity>
      <Entity type="Class">
        <Name>PickRegister</Name>
        <Access>Public</Access>
        <Location left="226" top="38" />
        <Size width="250" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static readonly PickRegister instance</Member>
        <Member type="Field">private Dictionary&lt;int, ISelectable&gt; register</Member>
        <Member type="Field">private int nextID</Member>
        <Member type="Constructor">private PickRegister()</Member>
        <Member type="Property">public static PickRegister Instance { get; }</Member>
        <Member type="Method">public int GetID(ISelectable selectableRef)</Member>
        <Member type="Method">public ISelectable LookupSelectable(int id)</Member>
        <Member type="Method">public void Remove(int key)</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>RenderState</Name>
        <Access>Public</Access>
        <Location left="371" top="852" />
        <Size width="162" height="112" />
        <Collapsed>False</Collapsed>
        <Value>Select</Value>
        <Value>Render</Value>
      </Entity>
      <Entity type="Class">
        <Name>Shader</Name>
        <Access>Public</Access>
        <Location left="1036" top="610" />
        <Size width="332" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static Dictionary&lt;string, Shader&gt; shaderRegister</Member>
        <Member type="Field">private static Shader selectionShader</Member>
        <Member type="Field">private int shaderID</Member>
        <Member type="Field">private int vertexShader</Member>
        <Member type="Field">private int fragmentShader</Member>
        <Member type="Constructor">private Shader()</Member>
        <Member type="Property">public int ShaderID { get; set; }</Member>
        <Member type="Method">public static Shader CreateShader()</Member>
        <Member type="Method">static void ValidateShader()</Member>
        <Member type="Method">static void ValidateProgram()</Member>
        <Member type="Method">public void Bind()</Member>
        <Member type="Method">public void UnBind()</Member>
        <Modifier>Sealed</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FrameBufferManager</Name>
        <Access>Public</Access>
        <Location left="571" top="852" />
        <Size width="337" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static FrameBufferManager instance</Member>
        <Member type="Field">uint selectionBuffer</Member>
        <Member type="Field">uint[] renderBuffer</Member>
        <Member type="Field">int viewportWidth</Member>
        <Member type="Field">int viewportHeight</Member>
        <Member type="Field">private RenderState currentState</Member>
        <Member type="Constructor">static FrameBufferManager()</Member>
        <Member type="Constructor">private FrameBufferManager()</Member>
        <Member type="Property">public FrameBufferManager Instance { get; }</Member>
        <Member type="Property">public RenderState CurrentState { get; }</Member>
        <Member type="Method">private static void SetRenderbufferStorage(int width, int height)</Member>
        <Member type="Method">public void UpdateSelectionViewport(int width, int height)</Member>
        <Member type="Method">public void BindFBO(RenderState buffer)</Member>
        <Member type="Method">public void ReadFBO(RenderState buffer)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>RenderBuffer</Name>
        <Access>Public</Access>
        <Location left="693" top="1262" />
        <Size width="162" height="112" />
        <Collapsed>False</Collapsed>
        <Value>Color</Value>
        <Value>Depth</Value>
        <Value>NumRenderBuffers</Value>
      </Entity>
      <Entity type="Interface">
        <Name>ISelectable</Name>
        <Access>Public</Access>
        <Location left="636" top="127" />
        <Size width="210" height="109" />
        <Collapsed>False</Collapsed>
        <Member type="Property">int Id { get; set; }</Member>
        <Member type="Property">bool IsSelected { get; set; }</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>965</X>
          <Y>683</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1009</X>
          <Y>683</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>has</StartRole>
      </Relationship>
      <Relationship type="Association" first="1" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>950</X>
          <Y>505</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1011</X>
          <Y>310</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>has</StartRole>
      </Relationship>
      <Relationship type="Association" first="7" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>517</X>
          <Y>205</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>399</X>
          <Y>279</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>has</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>461</X>
          <Y>518</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>517</X>
          <Y>518</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>has</StartRole>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="10">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>965</X>
          <Y>1130</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>831</X>
          <Y>1192</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartRole>has</StartRole>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Nesting" first="10" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>781</X>
          <Y>1204</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>781</X>
          <Y>1237</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="1" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>811</X>
          <Y>823</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>811</X>
          <Y>804</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="1" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>742</X>
          <Y>305</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>742</X>
          <Y>264</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1133</X>
          <Y>929</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>938</X>
          <Y>935</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="7">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>543</X>
          <Y>357</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>