#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProdIssueBackEnd
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProdIssueDb")]
	public partial class ProdIssueDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertProdIssue(ProdIssue instance);
    partial void UpdateProdIssue(ProdIssue instance);
    partial void DeleteProdIssue(ProdIssue instance);
    partial void InsertTrend(Trend instance);
    partial void UpdateTrend(Trend instance);
    partial void DeleteTrend(Trend instance);
    #endregion
		
		public ProdIssueDbDataContext() : 
				base(global::ProdIssueBackEnd.Properties.Settings.Default.ProdIssueDbConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ProdIssueDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdIssueDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdIssueDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdIssueDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<ProdIssue> ProdIssues
		{
			get
			{
				return this.GetTable<ProdIssue>();
			}
		}
		
		public System.Data.Linq.Table<Trend> Trends
		{
			get
			{
				return this.GetTable<Trend>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employee_Id;
		
		private string _firstName;
		
		private string _lastName;
		
		private EntitySet<ProdIssue> _ProdIssues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_IdChanging(int value);
    partial void Onemployee_IdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    #endregion
		
		public Employee()
		{
			this._ProdIssues = new EntitySet<ProdIssue>(new Action<ProdIssue>(this.attach_ProdIssues), new Action<ProdIssue>(this.detach_ProdIssues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employee_Id
		{
			get
			{
				return this._employee_Id;
			}
			set
			{
				if ((this._employee_Id != value))
				{
					this.Onemployee_IdChanging(value);
					this.SendPropertyChanging();
					this._employee_Id = value;
					this.SendPropertyChanged("employee_Id");
					this.Onemployee_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ProdIssue", Storage="_ProdIssues", ThisKey="employee_Id", OtherKey="employee_Id")]
		public EntitySet<ProdIssue> ProdIssues
		{
			get
			{
				return this._ProdIssues;
			}
			set
			{
				this._ProdIssues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProdIssues(ProdIssue entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ProdIssues(ProdIssue entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProdIssues")]
	public partial class ProdIssue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prodIssue_Id;
		
		private System.DateTime _openDate;
		
		private string _deptReported;
		
		private int _employee_Id;
		
		private string _description;
		
		private string _deptOrigin;
		
		private string _issueType;
		
		private string _priorityClass;
		
		private System.Nullable<int> _trend_Id;
		
		private string _qualityProcess;
		
		private System.Nullable<int> _qualityRefNo;
		
		private bool _quarantined;
		
		private string _discussion;
		
		private string _solution;
		
		private bool _reject;
		
		private System.Nullable<int> _partList_Id;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Trend> _Trend;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprodIssue_IdChanging(int value);
    partial void OnprodIssue_IdChanged();
    partial void OnopenDateChanging(System.DateTime value);
    partial void OnopenDateChanged();
    partial void OndeptReportedChanging(string value);
    partial void OndeptReportedChanged();
    partial void Onemployee_IdChanging(int value);
    partial void Onemployee_IdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndeptOriginChanging(string value);
    partial void OndeptOriginChanged();
    partial void OnissueTypeChanging(string value);
    partial void OnissueTypeChanged();
    partial void OnpriorityClassChanging(string value);
    partial void OnpriorityClassChanged();
    partial void Ontrend_IdChanging(System.Nullable<int> value);
    partial void Ontrend_IdChanged();
    partial void OnqualityProcessChanging(string value);
    partial void OnqualityProcessChanged();
    partial void OnqualityRefNoChanging(System.Nullable<int> value);
    partial void OnqualityRefNoChanged();
    partial void OnquarantinedChanging(bool value);
    partial void OnquarantinedChanged();
    partial void OndiscussionChanging(string value);
    partial void OndiscussionChanged();
    partial void OnsolutionChanging(string value);
    partial void OnsolutionChanged();
    partial void OnrejectChanging(bool value);
    partial void OnrejectChanged();
    partial void OnpartList_IdChanging(System.Nullable<int> value);
    partial void OnpartList_IdChanged();
    #endregion
		
		public ProdIssue()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Trend = default(EntityRef<Trend>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodIssue_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prodIssue_Id
		{
			get
			{
				return this._prodIssue_Id;
			}
			set
			{
				if ((this._prodIssue_Id != value))
				{
					this.OnprodIssue_IdChanging(value);
					this.SendPropertyChanging();
					this._prodIssue_Id = value;
					this.SendPropertyChanged("prodIssue_Id");
					this.OnprodIssue_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openDate", DbType="Date NOT NULL")]
		public System.DateTime openDate
		{
			get
			{
				return this._openDate;
			}
			set
			{
				if ((this._openDate != value))
				{
					this.OnopenDateChanging(value);
					this.SendPropertyChanging();
					this._openDate = value;
					this.SendPropertyChanged("openDate");
					this.OnopenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptReported", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string deptReported
		{
			get
			{
				return this._deptReported;
			}
			set
			{
				if ((this._deptReported != value))
				{
					this.OndeptReportedChanging(value);
					this.SendPropertyChanging();
					this._deptReported = value;
					this.SendPropertyChanged("deptReported");
					this.OndeptReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_Id", DbType="Int NOT NULL")]
		public int employee_Id
		{
			get
			{
				return this._employee_Id;
			}
			set
			{
				if ((this._employee_Id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_IdChanging(value);
					this.SendPropertyChanging();
					this._employee_Id = value;
					this.SendPropertyChanged("employee_Id");
					this.Onemployee_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptOrigin", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string deptOrigin
		{
			get
			{
				return this._deptOrigin;
			}
			set
			{
				if ((this._deptOrigin != value))
				{
					this.OndeptOriginChanging(value);
					this.SendPropertyChanging();
					this._deptOrigin = value;
					this.SendPropertyChanged("deptOrigin");
					this.OndeptOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_issueType", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string issueType
		{
			get
			{
				return this._issueType;
			}
			set
			{
				if ((this._issueType != value))
				{
					this.OnissueTypeChanging(value);
					this.SendPropertyChanging();
					this._issueType = value;
					this.SendPropertyChanged("issueType");
					this.OnissueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priorityClass", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string priorityClass
		{
			get
			{
				return this._priorityClass;
			}
			set
			{
				if ((this._priorityClass != value))
				{
					this.OnpriorityClassChanging(value);
					this.SendPropertyChanging();
					this._priorityClass = value;
					this.SendPropertyChanged("priorityClass");
					this.OnpriorityClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trend_Id", DbType="Int")]
		public System.Nullable<int> trend_Id
		{
			get
			{
				return this._trend_Id;
			}
			set
			{
				if ((this._trend_Id != value))
				{
					if (this._Trend.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontrend_IdChanging(value);
					this.SendPropertyChanging();
					this._trend_Id = value;
					this.SendPropertyChanged("trend_Id");
					this.Ontrend_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualityProcess", DbType="NVarChar(4)")]
		public string qualityProcess
		{
			get
			{
				return this._qualityProcess;
			}
			set
			{
				if ((this._qualityProcess != value))
				{
					this.OnqualityProcessChanging(value);
					this.SendPropertyChanging();
					this._qualityProcess = value;
					this.SendPropertyChanged("qualityProcess");
					this.OnqualityProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualityRefNo", DbType="Int")]
		public System.Nullable<int> qualityRefNo
		{
			get
			{
				return this._qualityRefNo;
			}
			set
			{
				if ((this._qualityRefNo != value))
				{
					this.OnqualityRefNoChanging(value);
					this.SendPropertyChanging();
					this._qualityRefNo = value;
					this.SendPropertyChanged("qualityRefNo");
					this.OnqualityRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quarantined", DbType="Bit NOT NULL")]
		public bool quarantined
		{
			get
			{
				return this._quarantined;
			}
			set
			{
				if ((this._quarantined != value))
				{
					this.OnquarantinedChanging(value);
					this.SendPropertyChanging();
					this._quarantined = value;
					this.SendPropertyChanged("quarantined");
					this.OnquarantinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discussion", DbType="NVarChar(MAX)")]
		public string discussion
		{
			get
			{
				return this._discussion;
			}
			set
			{
				if ((this._discussion != value))
				{
					this.OndiscussionChanging(value);
					this.SendPropertyChanging();
					this._discussion = value;
					this.SendPropertyChanged("discussion");
					this.OndiscussionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solution", DbType="NVarChar(MAX)")]
		public string solution
		{
			get
			{
				return this._solution;
			}
			set
			{
				if ((this._solution != value))
				{
					this.OnsolutionChanging(value);
					this.SendPropertyChanging();
					this._solution = value;
					this.SendPropertyChanged("solution");
					this.OnsolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reject", DbType="Bit NOT NULL")]
		public bool reject
		{
			get
			{
				return this._reject;
			}
			set
			{
				if ((this._reject != value))
				{
					this.OnrejectChanging(value);
					this.SendPropertyChanging();
					this._reject = value;
					this.SendPropertyChanged("reject");
					this.OnrejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partList_Id", DbType="Int")]
		public System.Nullable<int> partList_Id
		{
			get
			{
				return this._partList_Id;
			}
			set
			{
				if ((this._partList_Id != value))
				{
					this.OnpartList_IdChanging(value);
					this.SendPropertyChanging();
					this._partList_Id = value;
					this.SendPropertyChanged("partList_Id");
					this.OnpartList_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ProdIssue", Storage="_Employee", ThisKey="employee_Id", OtherKey="employee_Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ProdIssues.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ProdIssues.Add(this);
						this._employee_Id = value.employee_Id;
					}
					else
					{
						this._employee_Id = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trend_ProdIssue", Storage="_Trend", ThisKey="trend_Id", OtherKey="trend_Id", IsForeignKey=true)]
		public Trend Trend
		{
			get
			{
				return this._Trend.Entity;
			}
			set
			{
				Trend previousValue = this._Trend.Entity;
				if (((previousValue != value) 
							|| (this._Trend.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trend.Entity = null;
						previousValue.ProdIssues.Remove(this);
					}
					this._Trend.Entity = value;
					if ((value != null))
					{
						value.ProdIssues.Add(this);
						this._trend_Id = value.trend_Id;
					}
					else
					{
						this._trend_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Trend");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trends")]
	public partial class Trend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _trend_Id;
		
		private string _description;
		
		private EntitySet<ProdIssue> _ProdIssues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontrend_IdChanging(int value);
    partial void Ontrend_IdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Trend()
		{
			this._ProdIssues = new EntitySet<ProdIssue>(new Action<ProdIssue>(this.attach_ProdIssues), new Action<ProdIssue>(this.detach_ProdIssues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trend_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int trend_Id
		{
			get
			{
				return this._trend_Id;
			}
			set
			{
				if ((this._trend_Id != value))
				{
					this.Ontrend_IdChanging(value);
					this.SendPropertyChanging();
					this._trend_Id = value;
					this.SendPropertyChanged("trend_Id");
					this.Ontrend_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trend_ProdIssue", Storage="_ProdIssues", ThisKey="trend_Id", OtherKey="trend_Id")]
		public EntitySet<ProdIssue> ProdIssues
		{
			get
			{
				return this._ProdIssues;
			}
			set
			{
				this._ProdIssues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProdIssues(ProdIssue entity)
		{
			this.SendPropertyChanging();
			entity.Trend = this;
		}
		
		private void detach_ProdIssues(ProdIssue entity)
		{
			this.SendPropertyChanging();
			entity.Trend = null;
		}
	}
}
#pragma warning restore 1591
